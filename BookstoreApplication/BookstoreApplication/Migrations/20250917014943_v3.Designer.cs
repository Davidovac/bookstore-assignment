// <auto-generated />
using System;
using BookstoreApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BookstoreApplication.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917014943_v3")]
    partial class v3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Birthday");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Biography = "English novelist",
                            DateOfBirth = new DateTime(1775, 12, 16, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Jane Austen"
                        },
                        new
                        {
                            Id = 2,
                            Biography = "American writer",
                            DateOfBirth = new DateTime(1835, 11, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Mark Twain"
                        },
                        new
                        {
                            Id = 3,
                            Biography = "English modernist author",
                            DateOfBirth = new DateTime(1882, 1, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Virginia Woolf"
                        },
                        new
                        {
                            Id = 4,
                            Biography = "American novelist",
                            DateOfBirth = new DateTime(1899, 7, 21, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Ernest Hemingway"
                        },
                        new
                        {
                            Id = 5,
                            Biography = "English crime writer",
                            DateOfBirth = new DateTime(1890, 9, 15, 0, 0, 0, 0, DateTimeKind.Utc),
                            FullName = "Agatha Christie"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearBegan")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Awards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Award for best novel",
                            Name = "Best Novel",
                            YearBegan = 1950
                        },
                        new
                        {
                            Id = 2,
                            Description = "Award for lifetime contribution",
                            Name = "Lifetime Achievement",
                            YearBegan = 1960
                        },
                        new
                        {
                            Id = 3,
                            Description = "Award for first book",
                            Name = "Debut Author",
                            YearBegan = 1970
                        },
                        new
                        {
                            Id = 4,
                            Description = "Voted by readers",
                            Name = "Readers Choice",
                            YearBegan = 1980
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AwardAuthor", b =>
                {
                    b.Property<int>("AwardId")
                        .HasColumnType("integer");

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<int>("Year")
                        .HasColumnType("integer");

                    b.HasKey("AwardId", "AuthorId");

                    b.HasIndex("AuthorId");

                    b.ToTable("AuthorAwardBridge", (string)null);

                    b.HasData(
                        new
                        {
                            AwardId = 1,
                            AuthorId = 1,
                            Year = 1951
                        },
                        new
                        {
                            AwardId = 1,
                            AuthorId = 2,
                            Year = 1952
                        },
                        new
                        {
                            AwardId = 1,
                            AuthorId = 3,
                            Year = 1953
                        },
                        new
                        {
                            AwardId = 2,
                            AuthorId = 1,
                            Year = 1965
                        },
                        new
                        {
                            AwardId = 2,
                            AuthorId = 4,
                            Year = 1970
                        },
                        new
                        {
                            AwardId = 2,
                            AuthorId = 5,
                            Year = 1975
                        },
                        new
                        {
                            AwardId = 3,
                            AuthorId = 2,
                            Year = 1971
                        },
                        new
                        {
                            AwardId = 3,
                            AuthorId = 3,
                            Year = 1972
                        },
                        new
                        {
                            AwardId = 3,
                            AuthorId = 5,
                            Year = 1973
                        },
                        new
                        {
                            AwardId = 4,
                            AuthorId = 1,
                            Year = 1981
                        },
                        new
                        {
                            AwardId = 4,
                            AuthorId = 2,
                            Year = 1982
                        },
                        new
                        {
                            AwardId = 4,
                            AuthorId = 3,
                            Year = 1983
                        },
                        new
                        {
                            AwardId = 4,
                            AuthorId = 4,
                            Year = 1984
                        },
                        new
                        {
                            AwardId = 4,
                            AuthorId = 5,
                            Year = 1985
                        },
                        new
                        {
                            AwardId = 1,
                            AuthorId = 5,
                            Year = 1955
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("integer");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PageCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("PublishedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PublisherId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            ISBN = "1111111111111",
                            PageCount = 432,
                            PublishedDate = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Pride and Prejudice"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 1,
                            ISBN = "1111111111112",
                            PageCount = 384,
                            PublishedDate = new DateTime(1815, 12, 23, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Emma"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 2,
                            ISBN = "2222222222221",
                            PageCount = 366,
                            PublishedDate = new DateTime(1884, 12, 10, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "Adventures of Huckleberry Finn"
                        },
                        new
                        {
                            Id = 4,
                            AuthorId = 2,
                            ISBN = "2222222222222",
                            PageCount = 274,
                            PublishedDate = new DateTime(1876, 6, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "The Adventures of Tom Sawyer"
                        },
                        new
                        {
                            Id = 5,
                            AuthorId = 3,
                            ISBN = "3333333333331",
                            PageCount = 296,
                            PublishedDate = new DateTime(1925, 5, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Mrs Dalloway"
                        },
                        new
                        {
                            Id = 6,
                            AuthorId = 3,
                            ISBN = "3333333333332",
                            PageCount = 320,
                            PublishedDate = new DateTime(1927, 5, 5, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "To the Lighthouse"
                        },
                        new
                        {
                            Id = 7,
                            AuthorId = 4,
                            ISBN = "4444444444441",
                            PageCount = 127,
                            PublishedDate = new DateTime(1952, 9, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Old Man and the Sea"
                        },
                        new
                        {
                            Id = 8,
                            AuthorId = 4,
                            ISBN = "4444444444442",
                            PageCount = 355,
                            PublishedDate = new DateTime(1929, 9, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 2,
                            Title = "A Farewell to Arms"
                        },
                        new
                        {
                            Id = 9,
                            AuthorId = 5,
                            ISBN = "5555555555551",
                            PageCount = 256,
                            PublishedDate = new DateTime(1934, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "Murder on the Orient Express"
                        },
                        new
                        {
                            Id = 10,
                            AuthorId = 5,
                            ISBN = "5555555555552",
                            PageCount = 272,
                            PublishedDate = new DateTime(1939, 11, 6, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "And Then There Were None"
                        },
                        new
                        {
                            Id = 11,
                            AuthorId = 1,
                            ISBN = "1111111111113",
                            PageCount = 248,
                            PublishedDate = new DateTime(1817, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 3,
                            Title = "Persuasion"
                        },
                        new
                        {
                            Id = 12,
                            AuthorId = 2,
                            ISBN = "6666666666661",
                            PageCount = 232,
                            PublishedDate = new DateTime(1903, 4, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            PublisherId = 1,
                            Title = "The Call of the Wild"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "80 Strand, London",
                            Name = "Penguin Books",
                            Website = "https://penguin.co.uk"
                        },
                        new
                        {
                            Id = 2,
                            Address = "195 Broadway, New York",
                            Name = "HarperCollins",
                            Website = "https://harpercollins.com"
                        },
                        new
                        {
                            Id = 3,
                            Address = "1745 Broadway, New York",
                            Name = "Random House",
                            Website = "https://randomhouse.com"
                        });
                });

            modelBuilder.Entity("BookstoreApplication.Models.AwardAuthor", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany("AwardAuthors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Award", "Award")
                        .WithMany("AwardAuthors")
                        .HasForeignKey("AwardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Award");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Book", b =>
                {
                    b.HasOne("BookstoreApplication.Models.Author", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookstoreApplication.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Author", b =>
                {
                    b.Navigation("AwardAuthors");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Award", b =>
                {
                    b.Navigation("AwardAuthors");
                });

            modelBuilder.Entity("BookstoreApplication.Models.Publisher", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
